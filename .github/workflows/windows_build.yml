name: Run the Windows build
on:
  workflow_dispatch: {}
jobs:
  free-disk-space:
    name: Free space disk on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: false
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: true

  build:
    name: Build ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: free-disk-space # Asegura que este trabajo se ejecute después de liberar espacio
    strategy:
      fail-fast: true # Detiene la ejecución si un build falla
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.UNITY_EMAIL }}" ] || [ -z "${{ secrets.UNITY_PASSWORD }}" ] || [ -z "${{ secrets.UNITY_LICENSE }}" ]; then
            echo "Required secrets are missing. Please check UNITY_EMAIL, UNITY_PASSWORD, and UNITY_LICENSE."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            Library
            Temp
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Build
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ vars.UNITY_VERSION }}
          versioning: Semantic
          buildName: ${{ vars.PROJECT_NAME }}

      # - name: Compress Build
      #   run: |
      #     zip -r build/${{ vars.PROJECT_NAME }}-${{ matrix.targetPlatform }}.zip build/${{ matrix.targetPlatform }}/*
      #     mv build/${{ matrix.targetPlatform }}/*.zip build/

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ github.run_id }}
          path: build/${{ vars.PROJECT_NAME }}-${{ matrix.targetPlatform }}
          if-no-files-found: 'warn'
