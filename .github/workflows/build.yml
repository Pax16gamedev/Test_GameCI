name: Build Unity Project
on:
  workflow_dispatch: {}
jobs:
  free-disk-space:
    name: Free space disk on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

  build:
    name: Build ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: free-disk-space
    strategy:
      fail-fast: true
      matrix:
        targetPlatform: 
          - WebGL
          - StandaloneWindows64
    env:
      UNITY_VERSION: ${{ vars.UNITY_VERSION }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.UNITY_EMAIL }}" ] || [ -z "${{ secrets.UNITY_PASSWORD }}" ] || [ -z "${{ secrets.UNITY_LICENSE }}" ]; then
            echo "Required secrets are missing. Please check UNITY_EMAIL, UNITY_PASSWORD, and UNITY_LICENSE."
            exit 1
          fi
      
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            Library
            Temp
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Build
      - name: Build
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ env.UNITY_VERSION }}
          versioning: Semantic
          buildName: ${{ vars.PROJECT_NAME }}

      # Upload Build
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: Build ${{ vars.PROJECT_NAME }}-${{ matrix.targetPlatform }}-${{ github.run_id }}
          path: build/${{ matrix.targetPlatform }}
          if-no-files-found: 'warn'

      - name: Deploy to GitHub Pages
        if: ${{ matrix.targetPlatform == 'WebGL' }}
        uses: JamesIves/github-pages-deploy-action@4.1.3
        with:
          branch: gh-pages
          folder: build/${{ matrix.targetPlatform }}
          target-folder: .

        # Set notification message
      - name: Set Discord Notification Message
        id: set-message
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "::set-output name=message::✅ Build de tipo ${{ matrix.targetPlatform }} completado para la rama: ${{ github.ref_name }}"
          else
            echo "::set-output name=message::❌ Build de tipo ${{ matrix.targetPlatform }} fallido para la rama: ${{ github.ref_name }}"
          fi

        # Notify Discord
      - name: Notify Discord
        if: always()
        run: |
          curl -H "Content-Type: application/json" \
          -d '{"content": "${{ steps.set-message.outputs.message }}"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
